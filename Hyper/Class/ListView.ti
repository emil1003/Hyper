--[[
	Displays nodes as a vertically scrolling list
]]

class ListView extends ScrollContainer {
	totalNodeHeight = 0;
}

--[[
	@constructor
	@desc Resolves constructor arguments and invokes super.
	@param <table - structure>*
]]
function ListView:__init__( ... )
	self:super( ... )

	--self.xScrollAllowed = false
end

--[[
	@instance
	@desc Inserts a node at the bottom of the list.
	@param <Node - node>
]]
function ListView:addNode( node )
	if not Titanium.typeOf( node, "Node", true ) then
		return error( "Cannot add '"..tostring( node ).."' as Node on '"..tostring( self ).."'" )
	end

	if self.totalNodeHeight > 0 then
		node.Y = self.totalNodeHeight
	end
	self.totalNodeHeight = self.totalNodeHeight + node.height
	self.super:addNode( node )
	--self.width = self.width < node.width and node.width or self.width
	self.changed = true
end

function ListView:clearNodes()
	self.super:clearNodes()
	self.totalNodeHeight = 0
end

--[[
	@instance
	@desc Draw the node.
	@param <boolean - force>*
]]
function ListView:draw( force )
	if self.changed or force then
		self.super:draw()
	end
end