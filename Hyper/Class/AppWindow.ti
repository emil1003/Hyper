--[[
	Class that wraps "Window", and puts a Terminal inside it.
]]
class "AppWindow" extends "Window"

--[[
	@constructor
	@desc Setup Terminal view and init Window
	@param <table - structure>*
]]
function AppWindow:__init__( ... )
	self:resolve( ... )

	if not self.chunk then
		error("No function provided")
	end

	self.termSurface = Terminal():set {
		id = "TermSurface",
		X = 1,
		Y = 1,
		width = "$parent.width",
		height = "$parent.height"
	}

	self:super( ... )
	self.content:addNode( self.termSurface )

	self:watchProperty( "width", function()
		self:onResize()
	end)
end

--[[
	@instance
	@desc After init, pass the chunk to termSurface
]]
function AppWindow:__postInit__()
	self.super:__postInit__()

	self.termSurface:setChunk( self.chunk )
end

function AppWindow:onResize()
	self.termSurface:resume( GenericEvent "term_resize" )
end

configureConstructor({
	orderedArguments = { "X", "Y", "width", "height", "chunk" },
	argumentTypes = {
		chunk = "function"
	}
}, true)